---
####################################################################################################
# Cloudbased Webdevelopment Server                                                               #
####################################################################################################

version: "3.3"

networks:
  proxy:
    driver: bridge
  authelia:
    driver: bridge
  traefik-data:
    driver: local

volumes:
  authelia-data:
    driver: local
  redis-data:
    driver: local
  code-server-data:
    driver: local

services:
  ################################
  # Authentication with Authelia #
  ################################
  authelia:
    image: ghcr.io/GITHUB-USERNAME/authelia:latest
    container_name: authelia
    volumes:
      - authelia-data:/database
    networks:
      - proxy
      - authelia
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`auth.server.MY-DOMAIN.de`)"
      - "traefik.http.routers.authelia.entrypoints=https"
      - "traefik.http.routers.authelia.tls=true"
      - "traefik.http.routers.authelia.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.server.MY-DOMAIN.de" # yamllint disable-line rule:line-length
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email" # yamllint disable-line rule:line-length
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"
    expose:
      - 9091
    restart: unless-stopped
    healthcheck:
      disable: true
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/secrets/jwt
      - AUTHELIA_SESSION_SECRET_FILE=/secrets/session
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/secrets/encryption
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/secrets/smtp
      - TZ=Europe/Berlin

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis-data:/data
    networks:
      - authelia
    expose:
      - 6379
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin

  #########################
  # Traefik Reverse Proxy #
  #########################
  traefik:
    image: ghcr.io/GITHUB-USERNAME/traefik:latest
    container_name: traefik
    volumes:
      - traefik-data:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`proxy.server.MY-DOMAIN.de`)"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.middlewares=authelia@docker"
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - 80:80
      - 443:443
    command:
      - "--api"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.http=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.https=true"
      - "--entrypoints.https.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.email=ME@EMAIL.COM"
      - "--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http"
      - "--log=true"
      - "--log.level=ERROR"
    restart: unless-stopped
    depends_on:
      - "authelia"

  ##############
  # Watchtower #
  ##############
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/config.json
    environment:
      TZ: Europe/Berlin
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_SCHEDULE: "0 */15 * * * *"

  ###############
  # Code Server #
  ###############
  code-server:
    image: ghcr.io/<GITHUB_USERNAME>/code-server:latest
    container_name: code-server
    hostname: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - SUDO_PASSWORD=123
    volumes:
      - code-server-data:/config
    networks:
      - proxy
    expose:
      - 8443
      - 3000 # nextjs & react development server
      - 4200 # nx development server
      - 4400 # nx storybook
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"

      # code-server app
      - "traefik.http.routers.code-server.rule=Host(`vscode.server.<MY-DOMAIN>`)"
      - "traefik.http.routers.code-server.entrypoints=https"
      - "traefik.http.routers.code-server.tls=true"
      - "traefik.http.routers.code-server.tls.certresolver=letsencrypt"
      - "traefik.http.routers.code-server.middlewares=authelia@docker"
      - "traefik.http.routers.code-server.service=code-server-service"
      - "traefik.http.services.code-server-service.loadbalancer.server.port=8443"

      # port 3000
      - "traefik.http.routers.code-server-port-3000.rule=Host(`port-3000.server.<MY-DOMAIN>`)"
      - "traefik.http.routers.code-server-port-3000.entrypoints=https"
      - "traefik.http.routers.code-server-port-3000.tls=true"
      - "traefik.http.routers.code-server-port-3000.tls.certresolver=letsencrypt"
      - "traefik.http.routers.code-server-port-3000.middlewares=authelia@docker"
      - "traefik.http.routers.code-server-port-3000.service=code-server-port-3000-service"
      - "traefik.http.services.code-server-port-3000-service.loadbalancer.server.port=3000"

      # port 4200
      - "traefik.http.routers.code-server-port-4200.rule=Host(`port-4200.server.<MY-DOMAIN>`)"
      - "traefik.http.routers.code-server-port-4200.entrypoints=https"
      - "traefik.http.routers.code-server-port-4200.tls=true"
      - "traefik.http.routers.code-server-port-4200.tls.certresolver=letsencrypt"
      - "traefik.http.routers.code-server-port-4200.middlewares=authelia@docker"
      - "traefik.http.routers.code-server-port-4200.service=code-server-port-4200-service"
      - "traefik.http.services.code-server-port-4200-service.loadbalancer.server.port=4200"

      # port 4400
      - "traefik.http.routers.code-server-port-4400.rule=Host(`port-4400.server.<MY-DOMAIN>`)"
      - "traefik.http.routers.code-server-port-4400.entrypoints=https"
      - "traefik.http.routers.code-server-port-4400.tls=true"
      - "traefik.http.routers.code-server-port-4400.tls.certresolver=letsencrypt"
      - "traefik.http.routers.code-server-port-4400.middlewares=authelia@docker"
      - "traefik.http.routers.code-server-port-4400.service=code-server-port-4400-service"
      - "traefik.http.services.code-server-port-4400-service.loadbalancer.server.port=4400"
